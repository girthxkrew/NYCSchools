package com.android.nycschool.Data.Database;

import androidx.room.Dao;
import androidx.room.Insert;
import androidx.room.OnConflictStrategy;
import androidx.room.Query;

import com.android.nycschool.Data.Model.SchoolStats;

import java.util.List;

import io.reactivex.rxjava3.core.Observable;

/*
 * This interface is used to generate a class that will make queries to the database
 * for the school_info table
 * It is generated by room
 * This class was created for handling any offline data querying when the app is
 * unavailable to a wifi or cellular connection
 * I was not able to incorporate this class approriately because I couldn't determine if it would
 * be better to query all the information at once since the data in the dataset never changes
 * or to handle it like data will constantly be changing
 */

@Dao
public interface SchoolStatsDAO {

    @Query("SELECT * FROM school_info WHERE dbn = :dbn")
    Observable<List<SchoolStats>> getSchoolStats(String dbn);

    @Query("SELECT * FROM school_info")
    Observable<List<SchoolStats>> getAllSchoolStats();

    @Insert(onConflict = OnConflictStrategy.REPLACE)
    long[] insertAll(List<SchoolStats> school);
}
